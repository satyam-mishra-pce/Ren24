"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
from config import env

# import razorpay

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'import_export',
    'account',
    'ticket',
    'cart',
    'main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'account.authentication.EmailBackend',
    "django.contrib.auth.backends.ModelBackend"
    ]
ADMIN_AUTHENTICATION_METHOD = 'account.authentication.EmailBackend'

ROOT_URLCONF = 'config.urls'
AUTH_USER_MODEL = 'account.User'

LOGIN_URL = '/u/login'
LOGOUT_URL = '/u/logout'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"templates","account"),
                 os.path.join(BASE_DIR,"templates"),
                 os.path.join(BASE_DIR,"templates","ticket"),
                 os.path.join(BASE_DIR,"templates","cart"),
                 os.path.join(BASE_DIR,"templates","main"),
                 ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
                'cart.context_processors.cart',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# LOGGING = {
#     "version": 1,
#     "disable_existing_loggers":False,
#     'formatters': {
#         'verbose': {
#             'format': "[%(asctime)s] %(levelname)s [%(filename)s:%(lineno)s] %(message)s",
#             'datefmt': "%Y/%b/%d %H:%M:%S"
#         },
#         'simple': {
#             'format': '%(levelname)s %(message)s'
#         },
#     },
#     "handlers": {
#         'admin': {
#             'level': 'INFO',
#             'class': 'logging.FileHandler',
#             'filename': BASE_DIR / 'debug.log',
#             'formatter': 'verbose',
#         },
#         'errors': {
#             'level': 'ERROR',
#             'class': 'logging.FileHandler',
#             'filename': BASE_DIR / 'errors.log',
#             'formatter': 'verbose',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['admin'],
#             'level': 'INFO',
#             'propagate': True,
#         },
#         'django': {
#             'handlers': ['errors'],
#             'level': 'ERROR',
#             'propagate': True,
#         },
#     },
# }


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

PRODUCTION = env.getParameter('PRODUCTION') == 'True'
# PRODUCTION = False

if PRODUCTION:
    
    BASE_URL = env.getParameter('DOMAIN')
    
    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = env.getParameter('SECRET_KEY')

    # TODO :SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True
    
    Email='Renaissance@jecrc.ac.in'
    EMAIL_BACKEND = 'django_ses.SESBackend'

    ALLOWED_HOSTS = ['ec2-13-201-19-183.ap-south-1.compute.amazonaws.com', 
                     '13.235.239.6',
                     'www.jecrcrenaissance.co.in',
                     'jecrcrenaissance.co.in'
                     ]
    
    CSRF_TRUSTED_ORIGINS = ['https://www.jecrcrenaissance.co.in','https://jecrcrenaissance.con.in']
    CSRF_COOKIE_DOMAIN = 'jecrcrenaissance.co.in'

    # Database
    # https://docs.djangoproject.com/en/5.0/ref/settings/#databases

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            # 'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': env.getParameter('RDS_DB_NAME'),
            'USER': env.getParameter('RDS_USERNAME'),
            'PASSWORD': env.getParameter('RDS_PASSWORD'),
            'HOST': env.getParameter('RDS_HOSTNAME'),
            'PORT': env.getParameter('RDS_PORT'),
        }
    }
    
    # aws settings
    AWS_ACCESS_KEY_ID = env.getParameter('ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = env.getParameter('SECRET_ACCESS_KEY')
    AWS_STORAGE_BUCKET_NAME = env.getParameter('STORAGE_BUCKET_NAME')
    AWS_DEFAULT_ACL = None
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
    # s3 static settings
    AWS_LOCATION = 'static'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    PUBLIC_MEDIA_LOCATION = 'media'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'config.storage_backends.PublicMediaStorage'
else:
    
    BASE_URL = 'http:127.0.0.1:8000'
    
    AWS_ACCESS_KEY_ID = "AKIA3WO4ZFTK7JW4U6XT"
    AWS_SECRET_ACCESS_KEY = "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"
    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = 'django-insecure-3i-x6+f9gwr(4qxbtgwv-=7y27)ixgc)tp=29ne)@=a#&84khj'

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    ALLOWED_HOSTS = ['*']

    # Database
    # https://docs.djangoproject.com/en/5.0/ref/settings/#databases

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

    
    STATIC_URL = '/static/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    MEDIA_URL = '/media/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
    
STATICFILES_DIRS = [os.path.join(BASE_DIR,"static"),]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# EMAIL_BACKEND='django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST='smtp.gmail.com'
# EMAIL_PORT=587
# EMAIL_HOST_USER='johngallio155@gmail.com'
# EMAIL_HOST_PASSWORD='aegg eajy tumd ruxz'
# EMAIL_USE_TLS=True
# EMAIL_USE_SSL=False

